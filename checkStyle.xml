<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
	<property name="charset" value="UTF-8" />
	<property name="severity" value="error" />
	<property name="fileExtensions" value="java, properties, xml" />

	<module name="FileTabCharacter">
		<property name="eachLine" value="true" />
	</module>
	<module name="LineLength">
		<property name="fileExtensions" value="java" />
		<property name="max" value="150" />
		<property name="ignorePattern"
			value="^implements.*|^extends.*|^package.*|^import.*|a href|href|http://|https://|ftp://" />
	</module>
	<module name="SuppressWarningsFilter" />

	<module name="TreeWalker">
		<module name="SuppressionCommentFilter" />
		<module name="SuppressWarningsHolder" />

		<module name="ParameterNumber">
			<property name="max" value="5" />
			<property name="tokens" value="METHOD_DEF" />
		</module>

		<!-- Name Checker -->
		<module name="OuterTypeFilename" />
		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
			<message key="name.invalidPattern"
				value="Package name ''{0}'' must match pattern ''{1}''." />
		</module>
		<module name="TypeName" />
		<module name="MemberName" />
		<module name="ParameterName" />
		<module name="LambdaParameterName" />
		<module name="CatchParameterName" />
		<module name="LocalVariableName" />
		<module name="ClassTypeParameterName" />
		<module name="MethodTypeParameterName" />
		<module name="InterfaceTypeParameterName" />
		<module name="MethodName" />
		<module name="ConstantName" />
		<module name="StaticVariableName" />
		<module name="AbbreviationAsWordInName">
			<property name="ignoreFinal" value="false" />
			<property name="allowedAbbreviationLength" value="1" />
			<property name="allowedAbbreviations" value="VO,DTO" />
		</module>

		<!-- Import Checker -->
		<module name="AvoidStarImport" />
		<module name="UnusedImports" />
		<module name="RedundantImport" />

		<!-- Block Checker -->
		<module name="EmptyBlock">
			<property name="option" value="TEXT" />
			<property name="tokens"
				value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH" />
		</module>
		<module name="EmptyCatchBlock">
			<property name="exceptionVariableName"
				value="expected|ignore(d)?" />
		</module>
		<module name="LeftCurly" />
		<module name="RightCurly" />
		<module name="NeedBraces" />

		<!-- Coding Checker -->
		<module name="IllegalTokenText">
			<property name="tokens" value="STRING_LITERAL, CHAR_LITERAL" />
			<property name="format"
				value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)" />
			<property name="message"
				value="Consider using special escape sequence instead of octal value or Unicode escaped value." />
		</module>
		<module name="OneStatementPerLine" />
		<module name="MultipleVariableDeclarations" />
		<module name="MissingSwitchDefault" />
		<module name="FallThrough" />
		<module name="NoFinalizer" />
		<module name="OverloadMethodsDeclarationOrder" />
		<module name="VariableDeclarationUsageDistance" />
		<module name="AtclauseOrder">
			<property name="tagOrder"
				value="@param, @return, @throws, @deprecated" />
		</module>
		<module name="SimplifyBooleanReturn"/>
		<module name="StringLiteralEquality" />
		<module name="NestedIfDepth">
			<property name="max" value="3" />
		</module>
		
		<!-- Miscellaneous Checker -->
		<module name="AvoidEscapedUnicodeCharacters">
			<property name="allowEscapesForControlCharacters"
				value="true" />
			<property name="allowByTailComment" value="true" />
			<property name="allowNonPrintableEscapes" value="true" />
		</module>
		<module name="Indentation">
			<property name="arrayInitIndent" value="8" />
			<property name="lineWrappingIndentation" value="8" />
		</module>
		<module name="ArrayTypeStyle" />
		<module name="UpperEll" />
		
		<!-- Design Checker -->
		<module name="OneTopLevelClass" />

		<!-- Whitespace -->
		<module name="NoLineWrap" />
		<module name="WhitespaceAfter" />
		<module name="WhitespaceAround">
			<property name="allowEmptyConstructors" value="true" />
		</module>
		<module name="EmptyLineSeparator">
			<property name="allowMultipleEmptyLines" value="false" />
			<property name="allowMultipleEmptyLinesInsideClassMembers"
				value="false" />
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapDot" />
			<property name="tokens" value="DOT" />
			<property name="option" value="nl" />
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapComma" />
			<property name="tokens" value="COMMA" />
			<property name="option" value="EOL" />
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapEllipsis" />
			<property name="tokens" value="ELLIPSIS" />
			<property name="option" value="EOL" />
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapArrayDeclarator" />
			<property name="tokens" value="ARRAY_DECLARATOR" />
			<property name="option" value="EOL" />
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapMethodRef" />
			<property name="tokens" value="METHOD_REF" />
			<property name="option" value="nl" />
		</module>
		<module name="GenericWhitespace">
			<message key="ws.followed"
				value="GenericWhitespace ''{0}'' is followed by whitespace." />
			<message key="ws.preceded"
				value="GenericWhitespace ''{0}'' is preceded with whitespace." />
			<message key="ws.illegalFollow"
				value="GenericWhitespace ''{0}'' should followed by whitespace." />
			<message key="ws.notPreceded"
				value="GenericWhitespace ''{0}'' is not preceded with whitespace." />
		</module>
		<module name="MethodParamPad" />
		<module name="NoWhitespaceBefore" />
		<module name="ParenPad" />
		<module name="OperatorWrap">
			<property name="option" value="NL" />
			<property name="tokens"
				value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,
                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF " />
		</module>

		<!-- Modifier Checker -->
		<module name="ModifierOrder" />

		<!-- Annotation Checker -->
		<module name="AnnotationLocation">
			<property name="id" value="AnnotationLocationMostCases" />
			<property name="tokens"
				value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF" />
		</module>
		<module name="AnnotationLocation">
			<property name="id" value="AnnotationLocationVariables" />
			<property name="tokens" value="VARIABLE_DEF" />
			<property name="allowSamelineMultipleAnnotations"
				value="true" />
		</module>
	</module>
</module> 